{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMutation } from 'react-query';\nimport { orderService } from '../services';\nexport const useFindAllOrder = () => {\n  _s();\n  const {\n    mutateAsync: findAllOrder\n  } = useMutation('order', params => orderService.findOrder(params.user_id), {\n    onSuccess: () => {\n      alert('User Saved Successfully');\n    },\n    onError: error => {\n      alert(error);\n    }\n  });\n  return {\n    findAllOrder\n  };\n};\n_s(useFindAllOrder, \"dswsWCWp8hP7KbciFltOX50NJRY=\", false, function () {\n  return [useMutation];\n});","map":{"version":3,"names":["useMutation","orderService","useFindAllOrder","_s","mutateAsync","findAllOrder","params","findOrder","user_id","onSuccess","alert","onError","error"],"sources":["/home/and/Рабочий стол/Создать папку 6/frontend/src/hooks/useFindAllOrder.ts"],"sourcesContent":["import { useMutation } from 'react-query';\nimport { orderService } from '../services';\n\nexport const useFindAllOrder = () => {\n  const { mutateAsync: findAllOrder } = useMutation(\n    'order',\n    (params: { user_id: number }) => orderService.findOrder(params.user_id),\n    {\n      onSuccess: () => {\n        alert('User Saved Successfully');\n      },\n\n      onError: (error: any) => {\n        alert(error);\n      },\n    },\n  );\n  return { findAllOrder };\n};\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,YAAY,QAAQ,aAAa;AAE1C,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM;IAAEC,WAAW,EAAEC;EAAa,CAAC,GAAGL,WAAW,CAC/C,OAAO,EACNM,MAA2B,IAAKL,YAAY,CAACM,SAAS,CAACD,MAAM,CAACE,OAAO,CAAC,EACvE;IACEC,SAAS,EAAEA,CAAA,KAAM;MACfC,KAAK,CAAC,yBAAyB,CAAC;IAClC,CAAC;IAEDC,OAAO,EAAGC,KAAU,IAAK;MACvBF,KAAK,CAACE,KAAK,CAAC;IACd;EACF,CACF,CAAC;EACD,OAAO;IAAEP;EAAa,CAAC;AACzB,CAAC;AAACF,EAAA,CAfWD,eAAe;EAAA,QACYF,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}