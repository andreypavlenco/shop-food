{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  quantity: 0,\n  OrderPrice: 0,\n  UserOrder: []\n};\nexport const menuSlice = createSlice({\n  name: 'stores',\n  initialState,\n  reducers: {\n    orderAdd: (state, action) => {\n      const newOrder = {\n        ...action.payload\n      };\n      const order = state.UserOrder.find(index => index.food_id === newOrder.food_id);\n      if (!order) {\n        state.UserOrder.push({\n          ...newOrder,\n          quantity: 1\n        });\n        state.OrderPrice = state.UserOrder.reduce((total, order) => total + Number(order.food_price), 0);\n      }\n      if (order) {\n        order.quantity = order.quantity + 1;\n        state.OrderPrice += Number(order.food_price);\n      }\n    },\n    orderRemove: (state, action) => {\n      const foodIdToDelete = action.payload;\n      const updatedUserOrder = state.UserOrder.filter(order => order.food_id !== foodIdToDelete);\n      state.UserOrder = updatedUserOrder;\n      state.OrderPrice = state.UserOrder.reduce((total, order) => total + Number(order.food_price), 0);\n    },\n    quantityAdd: (state, action) => {\n      const foodId = action.payload;\n      const order = state.UserOrder.find(index => index.food_id === foodId);\n      if (order) {\n        order.quantity = order.quantity + 1;\n        state.OrderPrice += Number(order.food_price);\n      }\n    },\n    quantityLess: (state, action) => {\n      const foodId = action.payload;\n      const order = state.UserOrder.find(index => index.food_id === foodId);\n      if (order) {\n        order.quantity = order.quantity - 1;\n        state.OrderPrice -= Number(order.food_price);\n      }\n\n      // state.OrderPrice -= state.UserOrder[action.payload].food_price\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  orderAdd,\n  orderRemove,\n  quantityAdd,\n  quantityLess\n} = menuSlice.actions;\nexport default menuSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","quantity","OrderPrice","UserOrder","menuSlice","name","reducers","orderAdd","state","action","newOrder","payload","order","find","index","food_id","push","reduce","total","Number","food_price","orderRemove","foodIdToDelete","updatedUserOrder","filter","quantityAdd","foodId","quantityLess","actions","reducer"],"sources":["/home/and/Рабочий стол/Создать папку/shop-app/frontend/src/store/orderSlice.ts"],"sourcesContent":["import { PayloadAction, createSlice } from '@reduxjs/toolkit'\nimport { Food } from '../type';\n\n\n\nexport interface Order{\n  quantity: number\n  food_id: number;\n  food_name: string;\n  food_price: number;\n  food_img: string;\n}\n\nexport interface CounterState {\n  quantity: number\n  OrderPrice: number\n  UserOrder: Order[]\n}\n\nconst initialState: CounterState = {\n  quantity:0,\n  OrderPrice: 0,\n  UserOrder: []\n}\n\n\n\nexport const menuSlice = createSlice({\n  name: 'stores',\n  initialState,\n  reducers: {\n   \n\n          orderAdd:(state, action: PayloadAction<Food>) => {\n\n          const newOrder = { ...action.payload};\n          const order = state.UserOrder.find((index) => index.food_id === newOrder.food_id);\n\n          if(!order){\n           state.UserOrder.push({...newOrder , quantity:1})\n           state.OrderPrice = state.UserOrder.reduce((total,order) => total + Number(order.food_price), 0)\n          }\n\n          if(order){\n                    order.quantity = order.quantity + 1\n                      state.OrderPrice += Number(order.food_price);\n           }\n\n          \n          },\n\n          orderRemove:(state, action: PayloadAction<number>) => {\n\n            const foodIdToDelete = action.payload;\n            const updatedUserOrder = state.UserOrder.filter(order => order.food_id !== foodIdToDelete);\n            state.UserOrder = updatedUserOrder\n            state.OrderPrice = state.UserOrder.reduce((total,order) => total + Number(order.food_price), 0)\n\n          \n            },\n\n            quantityAdd:(state, action: PayloadAction<number>) => {\n              \n              const foodId = action.payload;\n           \n         const order = state.UserOrder.find((index) => index.food_id === foodId);\n                 \n                   if(order){\n                      order.quantity = order.quantity + 1\n                      state.OrderPrice += Number(order.food_price);\n                   }\n        \n          \n\n              },\n\n              quantityLess:(state, action: PayloadAction<number>) => {\n                \n                const foodId = action.payload;\n                const order = state.UserOrder.find((index) => index.food_id === foodId);\n                 \n                          if(order){\n                    order.quantity = order.quantity - 1\n                    state.OrderPrice -= Number(order.food_price);\n                        }\n\n               // state.OrderPrice -= state.UserOrder[action.payload].food_price\n                },\n\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const {orderAdd ,orderRemove, quantityAdd,  quantityLess } = menuSlice.actions\n\nexport default menuSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}