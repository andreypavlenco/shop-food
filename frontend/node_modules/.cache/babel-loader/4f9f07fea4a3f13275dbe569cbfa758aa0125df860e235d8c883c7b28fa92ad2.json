{"ast":null,"code":"var _jsxFileName = \"/home/and/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u0430\\u043F\\u043A\\u0443 6/frontend/src/components/Forms/FormHistory/FormHistory.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Input from '../../UI/Input';\nimport { useFindAllOrder } from '../../../hooks';\nimport { emailChange, phoneChange } from '../../../store/historySlice';\nimport { validateFormaHistory } from './validatorFormaHistory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormHistory = () => {\n  _s();\n  const {\n    findOneUser\n  } = user();\n  const {\n    findAllOrder\n  } = useFindAllOrder();\n  const dispatch = useDispatch();\n  const email = useSelector(state => state.history.email);\n  const phone = useSelector(state => state.history.phone);\n  const handleFindUser = async event => {\n    event.preventDefault();\n    const validator = validateFormaHistory({\n      email,\n      phone\n    });\n    if (validator) {\n      const {\n        ...user\n      } = await findOneUser(email, phone);\n      if (user) {\n        if (user[0].user_id) {\n          const {\n            ...order\n          } = await findAllOrder(user[0].user_id);\n          console.log(order);\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border-b border-gray-900/10 pb-12 w-96 ml-12 mt-24 \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        title: \"Email\",\n        value: email,\n        onChange: even => dispatch(emailChange(even.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        title: \"Phone\",\n        value: phone,\n        onChange: even => dispatch(phoneChange(even.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-10 mt-10\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"rounded-md bg-cyan-300 px-2.5 py-1.5  w-24 text-lg  text-gray-900 shadow-sm ring-1 ring-inset\",\n        onClick: event => handleFindUser(event),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(FormHistory, \"uzHW8am1quQZzdesgvXrnhnkOEs=\", false, function () {\n  return [useFindAllOrder, useDispatch, useSelector, useSelector];\n});\n_c = FormHistory;\nexport default FormHistory;\nvar _c;\n$RefreshReg$(_c, \"FormHistory\");","map":{"version":3,"names":["React","useDispatch","useSelector","Input","useFindAllOrder","emailChange","phoneChange","validateFormaHistory","jsxDEV","_jsxDEV","FormHistory","_s","findOneUser","user","findAllOrder","dispatch","email","state","history","phone","handleFindUser","event","preventDefault","validator","user_id","order","console","log","className","children","title","value","onChange","even","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/and/Рабочий стол/Создать папку 6/frontend/src/components/Forms/FormHistory/FormHistory.tsx"],"sourcesContent":["import React, { FC } from 'react'\nimport { RootState } from '../../../store/store'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Input from '../../UI/Input'\nimport { useFindAllOrder, useFindUser } from '../../../hooks'\nimport { emailChange, phoneChange } from '../../../store/historySlice'\nimport { validateFormaHistory } from './validatorFormaHistory'\nimport { userType } from '../../../types'\n\n\n\n\n\nconst FormHistory: FC = () => {\n  const { findOneUser } = user()\n  const { findAllOrder } = useFindAllOrder()\n  const dispatch = useDispatch() \n  const email:string = useSelector((state: RootState) => state.history.email)\n  const phone : string = useSelector((state: RootState) => state.history.phone)\n\n\n  const handleFindUser = async (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault()\n\n   const validator = validateFormaHistory({email,phone})\n\n    if( validator ){\n\n\n\n       const {...user}: userType[] = await findOneUser(email, phone)\n                                              \n    if (user) {\n      if (user[0].user_id) {\n        const {...order} : userType[] = await findAllOrder(user[0].user_id)\n\n        console.log(order)\n      }\n    }\n\n    }\n   \n  }\n  return (\n    <div className='border-b border-gray-900/10 pb-12 w-96 ml-12 mt-24 '>\n    \n      <div className='mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6'>\n      <Input title='Email' value={email} onChange={(even) => dispatch(emailChange(even.target.value))}  />\n      <Input title='Phone' value={phone} onChange={(even) => dispatch(phoneChange(even.target.value))}  />\n      </div>\n      <div className='flex space-x-10 mt-10'>\n        <button\n          className='rounded-md bg-cyan-300 px-2.5 py-1.5  w-24 text-lg  text-gray-900 shadow-sm ring-1 ring-inset'\n          onClick={(event) => handleFindUser(event)}\n        >\n          Submit\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default FormHistory\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}