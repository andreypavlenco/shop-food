{"ast":null,"code":"// import { PayloadAction, createSlice } from '@reduxjs/toolkit'\n// import { Food } from '../type';\n\n// export interface Order{\n//   id: number,\n//   food_id: number;\n//   food_name: string;\n//   food_price: number;\n//   food_img: string;\n// }\n\n// export interface CounterState {\n//   id: number\n//   PizzaDay: boolean,\n//   IQPizza: boolean,\n//   KFC: boolean,\n//   UserOrder : Order[]\n\n// }\n\n// const initialState: CounterState = {\n//   id:0,\n//   PizzaDay: true,\n//   IQPizza: false,\n//   KFC: false,\n//   UserOrder: []\n// }\n\n// export const menuSlice = createSlice({\n//   name: 'stores',\n//   initialState,\n//   reducers: {\n//     PizzaDayOn: (state) => {\n//     state.PizzaDay = true\n//     state.IQPizza = false\n//     state.KFC = false\n\n//     },\n\n//     IQPizzaOn: (state) => {\n//       state.PizzaDay = false\n//       state.IQPizza = true\n//       state.KFC = false\n\n//       },\n\n//       KFCOn: (state) => {\n//         state.PizzaDay = false\n//         state.IQPizza = false\n//         state.KFC = true\n\n//         },\n\n//         OrderAdd: (state, action: PayloadAction<Food>) => {\n\n//           const newOrder = { ...action.payload, id: state.id++ };\n//           state.UserOrder.push(newOrder)\n\n//           },\n\n//           OrderDelete: (state, action: PayloadAction<number>) => {\n\n//             const foodIdToDelete = action.payload;\n\n//             const updatedUserOrder = state.UserOrder.filter(order => order.food_id !== foodIdToDelete);\n\n//             state.UserOrder = updatedUserOrder\n//             console.log(updatedUserOrder)\n\n//             },\n\n//   },\n// })\n\n// // Action creators are generated for each case reducer function\n// export const { PizzaDayOn , IQPizzaOn , KFCOn , OrderAdd ,OrderDelete} = menuSlice.actions\n\n// export default menuSlice.reducer","map":{"version":3,"names":[],"sources":["/home/and/Рабочий стол/Создать папку/shop-app/frontend/src/store/menuSlice.ts"],"sourcesContent":["// import { PayloadAction, createSlice } from '@reduxjs/toolkit'\n// import { Food } from '../type';\n\n\n// export interface Order{\n//   id: number,\n//   food_id: number;\n//   food_name: string;\n//   food_price: number;\n//   food_img: string;\n// }\n\n// export interface CounterState {\n//   id: number\n//   PizzaDay: boolean,\n//   IQPizza: boolean,\n//   KFC: boolean,\n//   UserOrder : Order[]\n \n// }\n\n// const initialState: CounterState = {\n//   id:0,\n//   PizzaDay: true,\n//   IQPizza: false,\n//   KFC: false,\n//   UserOrder: []\n// }\n\n\n\n// export const menuSlice = createSlice({\n//   name: 'stores',\n//   initialState,\n//   reducers: {\n//     PizzaDayOn: (state) => {\n//     state.PizzaDay = true\n//     state.IQPizza = false\n//     state.KFC = false\n  \n\n//     },\n\n//     IQPizzaOn: (state) => {\n//       state.PizzaDay = false\n//       state.IQPizza = true\n//       state.KFC = false\n    \n  \n//       },\n\n\n//       KFCOn: (state) => {\n//         state.PizzaDay = false\n//         state.IQPizza = false\n//         state.KFC = true\n      \n    \n//         },\n\n\n//         OrderAdd: (state, action: PayloadAction<Food>) => {\n         \n//           const newOrder = { ...action.payload, id: state.id++ };\n//           state.UserOrder.push(newOrder)\n        \n      \n//           },\n\n//           OrderDelete: (state, action: PayloadAction<number>) => {\n         \n//             const foodIdToDelete = action.payload;\n  \n//             const updatedUserOrder = state.UserOrder.filter(order => order.food_id !== foodIdToDelete);\n\n//             state.UserOrder = updatedUserOrder\n//             console.log(updatedUserOrder)\n\n//             },\n\n//   },\n// })\n\n// // Action creators are generated for each case reducer function\n// export const { PizzaDayOn , IQPizzaOn , KFCOn , OrderAdd ,OrderDelete} = menuSlice.actions\n\n// export default menuSlice.reducer"],"mappings":"AAAA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;;AAGA;;AAGA;AACA;AACA;AACA;;AAGA;;AAGA;;AAEA;AACA;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}