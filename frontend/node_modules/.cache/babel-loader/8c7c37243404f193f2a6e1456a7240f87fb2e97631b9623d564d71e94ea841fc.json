{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMutation } from 'react-query';\nimport { userService } from '../services';\nexport const useCreateUser = () => {\n  _s();\n  const {\n    mutateAsync: createUser\n  } = useMutation('user', data => userService.postCreateUser(data), {\n    onSuccess: () => {\n      alert('User Saved Successfully');\n    },\n    onError: error => {\n      alert(error);\n    }\n  });\n  return {\n    createUser\n  };\n};\n_s(useCreateUser, \"WCUWvKBFN6D2uTSVQH+8gTm+4rs=\", false, function () {\n  return [useMutation];\n});","map":{"version":3,"names":["useMutation","userService","useCreateUser","_s","mutateAsync","createUser","data","postCreateUser","onSuccess","alert","onError","error"],"sources":["/home/and/Рабочий стол/Создать папку 6/frontend/src/hooks/useCreateUser.ts"],"sourcesContent":["import { useMutation } from 'react-query';\n\nimport { userService } from '../services';\nimport { userType } from '../types';\n\nexport const useCreateUser = () => {\n  const { mutateAsync: createUser } = useMutation(\n    'user',\n    (data: userType) => userService.postCreateUser(data),\n    {\n      onSuccess: () => {\n        alert('User Saved Successfully');\n      },\n\n      onError: (error: any) => {\n        alert(error);\n      },\n    },\n  );\n  return { createUser };\n};\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,aAAa;AAEzC,SAASC,WAAW,QAAQ,aAAa;AAGzC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM;IAAEC,WAAW,EAAEC;EAAW,CAAC,GAAGL,WAAW,CAC7C,MAAM,EACLM,IAAc,IAAKL,WAAW,CAACM,cAAc,CAACD,IAAI,CAAC,EACpD;IACEE,SAAS,EAAEA,CAAA,KAAM;MACfC,KAAK,CAAC,yBAAyB,CAAC;IAClC,CAAC;IAEDC,OAAO,EAAGC,KAAU,IAAK;MACvBF,KAAK,CAACE,KAAK,CAAC;IACd;EACF,CACF,CAAC;EACD,OAAO;IAAEN;EAAW,CAAC;AACvB,CAAC;AAACF,EAAA,CAfWD,aAAa;EAAA,QACYF,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}