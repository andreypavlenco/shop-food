{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  OrderPrice: 0,\n  UserOrder: []\n};\nexport const menuSlice = createSlice({\n  name: 'stores',\n  initialState,\n  reducers: {\n    OrderAdd: (state, action) => {\n      const newOrder = {\n        ...action.payload\n      };\n      state.UserOrder.push(newOrder);\n      console.log(state.OrderPrice);\n      state.OrderPrice = state.UserOrder.reduce((total, order) => Number(one.food_price) + Number(two.food_price), 0);\n    },\n    OrderDelete: (state, action) => {\n      const foodIdToDelete = action.payload;\n      const updatedUserOrder = state.UserOrder.filter(order => order.food_id !== foodIdToDelete);\n      state.UserOrder = updatedUserOrder;\n      console.log(updatedUserOrder);\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  OrderAdd,\n  OrderDelete\n} = menuSlice.actions;\nexport default menuSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","OrderPrice","UserOrder","menuSlice","name","reducers","OrderAdd","state","action","newOrder","payload","push","console","log","reduce","total","order","Number","one","food_price","two","OrderDelete","foodIdToDelete","updatedUserOrder","filter","food_id","actions","reducer"],"sources":["/home/and/Рабочий стол/Создать папку/shop-app/frontend/src/store/orderSlice.ts"],"sourcesContent":["import { PayloadAction, createSlice } from '@reduxjs/toolkit'\nimport { Food } from '../type';\n\n\nexport interface Order{\n  food_id: number;\n  food_name: string;\n  food_price: number;\n  food_img: string;\n}\n\nexport interface CounterState {\n  OrderPrice: number\n  UserOrder: Order[]\n}\n\nconst initialState: CounterState = {\n  OrderPrice: 0,\n  UserOrder: []\n}\n\n\n\nexport const menuSlice = createSlice({\n  name: 'stores',\n  initialState,\n  reducers: {\n   \n\n        OrderAdd: (state, action: PayloadAction<Order>) => {\n          const newOrder = { ...action.payload};\n          state.UserOrder.push(newOrder)\n          console.log(state.OrderPrice)\n          state.OrderPrice = state.UserOrder.reduce((total,order) => Number(one.food_price) + Number(two.food_price), 0)\n          },\n\n          OrderDelete: (state, action: PayloadAction<number>) => {\n         \n            const foodIdToDelete = action.payload;\n            const updatedUserOrder = state.UserOrder.filter(order => order.food_id !== foodIdToDelete);\n            state.UserOrder = updatedUserOrder\n            console.log(updatedUserOrder)\n\n            },\n\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const {OrderAdd ,OrderDelete} = menuSlice.actions\n\nexport default menuSlice.reducer"],"mappings":"AAAA,SAAwBA,WAAW,QAAQ,kBAAkB;AAgB7D,MAAMC,YAA0B,GAAG;EACjCC,UAAU,EAAE,CAAC;EACbC,SAAS,EAAE;AACb,CAAC;AAID,OAAO,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EACnCK,IAAI,EAAE,QAAQ;EACdJ,YAAY;EACZK,QAAQ,EAAE;IAGJC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAA4B,KAAK;MACjD,MAAMC,QAAQ,GAAG;QAAE,GAAGD,MAAM,CAACE;MAAO,CAAC;MACrCH,KAAK,CAACL,SAAS,CAACS,IAAI,CAACF,QAAQ,CAAC;MAC9BG,OAAO,CAACC,GAAG,CAACN,KAAK,CAACN,UAAU,CAAC;MAC7BM,KAAK,CAACN,UAAU,GAAGM,KAAK,CAACL,SAAS,CAACY,MAAM,CAAC,CAACC,KAAK,EAACC,KAAK,KAAKC,MAAM,CAACC,GAAG,CAACC,UAAU,CAAC,GAAGF,MAAM,CAACG,GAAG,CAACD,UAAU,CAAC,EAAE,CAAC,CAAC;IAC9G,CAAC;IAEDE,WAAW,EAAEA,CAACd,KAAK,EAAEC,MAA6B,KAAK;MAErD,MAAMc,cAAc,GAAGd,MAAM,CAACE,OAAO;MACrC,MAAMa,gBAAgB,GAAGhB,KAAK,CAACL,SAAS,CAACsB,MAAM,CAACR,KAAK,IAAIA,KAAK,CAACS,OAAO,KAAKH,cAAc,CAAC;MAC1Ff,KAAK,CAACL,SAAS,GAAGqB,gBAAgB;MAClCX,OAAO,CAACC,GAAG,CAACU,gBAAgB,CAAC;IAE7B;EAEV;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAACjB,QAAQ;EAAEe;AAAW,CAAC,GAAGlB,SAAS,CAACuB,OAAO;AAExD,eAAevB,SAAS,CAACwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}