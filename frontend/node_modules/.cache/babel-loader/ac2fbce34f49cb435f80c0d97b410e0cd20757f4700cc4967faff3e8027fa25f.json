{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  quantity: 0,\n  OrderPrice: 0,\n  UserOrder: []\n};\nexport const menuSlice = createSlice({\n  name: 'stores',\n  initialState,\n  reducers: {\n    orderAdd: (state, action) => {\n      const newOrder = {\n        ...action.payload\n      };\n      state.UserOrder.push({\n        ...newOrder,\n        quantity: 1\n      });\n      console.log(state.OrderPrice);\n      state.OrderPrice = state.UserOrder.reduce((total, order) => total + Number(order.food_price), 0);\n    },\n    orderRemove: (state, action) => {\n      const foodIdToDelete = action.payload;\n      const updatedUserOrder = state.UserOrder.filter(order => order.food_id !== foodIdToDelete);\n      state.UserOrder = updatedUserOrder;\n      state.OrderPrice = state.UserOrder.reduce((total, order) => total + Number(order.food_price), 0);\n    },\n    quantityAdd: (state, action) => {\n      const foodId = action.payload;\n      const order = state.UserOrder.find(index => index.food_id === foodId);\n      if (order) {\n        order.quantity = order.quantity + 1;\n      }\n      state.OrderPrice += state.UserOrder[action.payload].food_price;\n    },\n    quantityLess: (state, action) => {\n      const foodId = action.payload;\n      const order = state.UserOrder.find(index => index.food_id === foodId);\n      if (order) {\n        order.quantity = order.quantity - 1;\n      }\n\n      // state.OrderPrice -= state.UserOrder[action.payload].food_price\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  orderAdd,\n  orderRemove,\n  quantityAdd,\n  quantityLess\n} = menuSlice.actions;\nexport default menuSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","quantity","OrderPrice","UserOrder","menuSlice","name","reducers","orderAdd","state","action","newOrder","payload","push","console","log","reduce","total","order","Number","food_price","orderRemove","foodIdToDelete","updatedUserOrder","filter","food_id","quantityAdd","foodId","find","index","quantityLess","actions","reducer"],"sources":["/home/and/Рабочий стол/Создать папку/shop-app/frontend/src/store/orderSlice.ts"],"sourcesContent":["import { PayloadAction, createSlice } from '@reduxjs/toolkit'\nimport { Food } from '../type';\n\n\n\nexport interface Order{\n  quantity: number\n  food_id: number;\n  food_name: string;\n  food_price: number;\n  food_img: string;\n}\n\nexport interface CounterState {\n  quantity: number\n  OrderPrice: number\n  UserOrder: Order[]\n}\n\nconst initialState: CounterState = {\n  quantity:0,\n  OrderPrice: 0,\n  UserOrder: []\n}\n\n\n\nexport const menuSlice = createSlice({\n  name: 'stores',\n  initialState,\n  reducers: {\n   \n\n          orderAdd:(state, action: PayloadAction<Food>) => {\n          const newOrder = { ...action.payload};\n          state.UserOrder.push({...newOrder , quantity:1})\n          console.log(state.OrderPrice)\n          state.OrderPrice = state.UserOrder.reduce((total,order) => total + Number(order.food_price), 0)\n          },\n\n          orderRemove:(state, action: PayloadAction<number>) => {\n\n            const foodIdToDelete = action.payload;\n            const updatedUserOrder = state.UserOrder.filter(order => order.food_id !== foodIdToDelete);\n            state.UserOrder = updatedUserOrder\n            state.OrderPrice = state.UserOrder.reduce((total,order) => total + Number(order.food_price), 0)\n\n          \n            },\n\n            quantityAdd:(state, action: PayloadAction<number>) => {\n              \n              const foodId = action.payload;\n           \n         const order = state.UserOrder.find((index) => index.food_id === foodId);\n                 \n                   if(order){\n                      order.quantity = order.quantity + 1\n                   }\n        \n            state.OrderPrice += state.UserOrder[action.payload].food_price\n\n              },\n\n              quantityLess:(state, action: PayloadAction<number>) => {\n                \n                const foodId = action.payload;\n           \n         const order = state.UserOrder.find((index) => index.food_id === foodId);\n                 \n                          if(order){\n                    order.quantity = order.quantity - 1\n                        }\n\n               // state.OrderPrice -= state.UserOrder[action.payload].food_price\n                },\n\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const {orderAdd ,orderRemove, quantityAdd,  quantityLess } = menuSlice.actions\n\nexport default menuSlice.reducer"],"mappings":"AAAA,SAAwBA,WAAW,QAAQ,kBAAkB;AAmB7D,MAAMC,YAA0B,GAAG;EACjCC,QAAQ,EAAC,CAAC;EACVC,UAAU,EAAE,CAAC;EACbC,SAAS,EAAE;AACb,CAAC;AAID,OAAO,MAAMC,SAAS,GAAGL,WAAW,CAAC;EACnCM,IAAI,EAAE,QAAQ;EACdL,YAAY;EACZM,QAAQ,EAAE;IAGFC,QAAQ,EAACA,CAACC,KAAK,EAAEC,MAA2B,KAAK;MACjD,MAAMC,QAAQ,GAAG;QAAE,GAAGD,MAAM,CAACE;MAAO,CAAC;MACrCH,KAAK,CAACL,SAAS,CAACS,IAAI,CAAC;QAAC,GAAGF,QAAQ;QAAGT,QAAQ,EAAC;MAAC,CAAC,CAAC;MAChDY,OAAO,CAACC,GAAG,CAACN,KAAK,CAACN,UAAU,CAAC;MAC7BM,KAAK,CAACN,UAAU,GAAGM,KAAK,CAACL,SAAS,CAACY,MAAM,CAAC,CAACC,KAAK,EAACC,KAAK,KAAKD,KAAK,GAAGE,MAAM,CAACD,KAAK,CAACE,UAAU,CAAC,EAAE,CAAC,CAAC;IAC/F,CAAC;IAEDC,WAAW,EAACA,CAACZ,KAAK,EAAEC,MAA6B,KAAK;MAEpD,MAAMY,cAAc,GAAGZ,MAAM,CAACE,OAAO;MACrC,MAAMW,gBAAgB,GAAGd,KAAK,CAACL,SAAS,CAACoB,MAAM,CAACN,KAAK,IAAIA,KAAK,CAACO,OAAO,KAAKH,cAAc,CAAC;MAC1Fb,KAAK,CAACL,SAAS,GAAGmB,gBAAgB;MAClCd,KAAK,CAACN,UAAU,GAAGM,KAAK,CAACL,SAAS,CAACY,MAAM,CAAC,CAACC,KAAK,EAACC,KAAK,KAAKD,KAAK,GAAGE,MAAM,CAACD,KAAK,CAACE,UAAU,CAAC,EAAE,CAAC,CAAC;IAG/F,CAAC;IAEDM,WAAW,EAACA,CAACjB,KAAK,EAAEC,MAA6B,KAAK;MAEpD,MAAMiB,MAAM,GAAGjB,MAAM,CAACE,OAAO;MAElC,MAAMM,KAAK,GAAGT,KAAK,CAACL,SAAS,CAACwB,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACJ,OAAO,KAAKE,MAAM,CAAC;MAE7D,IAAGT,KAAK,EAAC;QACNA,KAAK,CAAChB,QAAQ,GAAGgB,KAAK,CAAChB,QAAQ,GAAG,CAAC;MACtC;MAEPO,KAAK,CAACN,UAAU,IAAIM,KAAK,CAACL,SAAS,CAACM,MAAM,CAACE,OAAO,CAAC,CAACQ,UAAU;IAE5D,CAAC;IAEDU,YAAY,EAACA,CAACrB,KAAK,EAAEC,MAA6B,KAAK;MAErD,MAAMiB,MAAM,GAAGjB,MAAM,CAACE,OAAO;MAEpC,MAAMM,KAAK,GAAGT,KAAK,CAACL,SAAS,CAACwB,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACJ,OAAO,KAAKE,MAAM,CAAC;MAEtD,IAAGT,KAAK,EAAC;QACfA,KAAK,CAAChB,QAAQ,GAAGgB,KAAK,CAAChB,QAAQ,GAAG,CAAC;MAC/B;;MAET;IACC;EAEd;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAACM,QAAQ;EAAEa,WAAW;EAAEK,WAAW;EAAGI;AAAa,CAAC,GAAGzB,SAAS,CAAC0B,OAAO;AAErF,eAAe1B,SAAS,CAAC2B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}