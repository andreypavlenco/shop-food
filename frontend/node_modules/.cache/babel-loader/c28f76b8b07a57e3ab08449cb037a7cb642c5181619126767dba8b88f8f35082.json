{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMutation } from 'react-query';\nimport { userService } from '../services';\nexport const useFindEmailUser = () => {\n  _s();\n  const {\n    mutateAsync: findEmailUser\n  } = useMutation('user', params => userService.findOneUser(params.email, params.phone), {\n    onSuccess: () => {\n      alert('User Saved Successfully');\n    },\n    onError: error => {\n      alert(error);\n    }\n  });\n  return {\n    findEmailUser\n  };\n};\n_s(useFindEmailUser, \"vwZnShuDV7FKtdNUDCQmFUlL6T4=\", false, function () {\n  return [useMutation];\n});","map":{"version":3,"names":["useMutation","userService","useFindEmailUser","_s","mutateAsync","findEmailUser","params","findOneUser","email","phone","onSuccess","alert","onError","error"],"sources":["/home/and/Рабочий стол/Создать папку 6/frontend/src/hooks/useFindEmailUser.ts"],"sourcesContent":["import { useMutation } from 'react-query'\nimport { userService } from '../services'\n\nexport const useFindEmailUser = () => {\n  const { mutateAsync: findEmailUser } = useMutation(\n    'user',\n    (params: { email: string; phone: string }) =>\n      userService.findOneUser(params.email, params.phone),\n    {\n      onSuccess: () => {\n        alert('User Saved Successfully')\n      },\n\n      onError: (error: any) => {\n        alert(error)\n      },\n    },\n  )\n  return { findEmailUser }\n}\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM;IAAEC,WAAW,EAAEC;EAAc,CAAC,GAAGL,WAAW,CAChD,MAAM,EACLM,MAAwC,IACvCL,WAAW,CAACM,WAAW,CAACD,MAAM,CAACE,KAAK,EAAEF,MAAM,CAACG,KAAK,CAAC,EACrD;IACEC,SAAS,EAAEA,CAAA,KAAM;MACfC,KAAK,CAAC,yBAAyB,CAAC;IAClC,CAAC;IAEDC,OAAO,EAAGC,KAAU,IAAK;MACvBF,KAAK,CAACE,KAAK,CAAC;IACd;EACF,CACF,CAAC;EACD,OAAO;IAAER;EAAc,CAAC;AAC1B,CAAC;AAAAF,EAAA,CAhBYD,gBAAgB;EAAA,QACYF,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}