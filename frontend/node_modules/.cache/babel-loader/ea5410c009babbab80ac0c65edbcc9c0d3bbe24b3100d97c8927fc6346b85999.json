{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  quantity: 0,\n  OrderPrice: 0,\n  UserOrder: []\n};\nexport const orderSlice = createSlice({\n  name: 'order',\n  initialState,\n  reducers: {\n    orderAdd: (state, action) => {\n      const newOrder = {\n        ...action.payload\n      };\n      const order = state.UserOrder.find(index => index.food_id === newOrder.food_id);\n      const price = order === null || order === void 0 ? void 0 : order.food_price;\n      console.log;\n      if (!order) {\n        state.OrderPrice = state.UserOrder.reduce((total, order) => total + Number(order.food_price), 0);\n        state.UserOrder.push({\n          ...newOrder,\n          quantity: 1,\n          price: state.OrderPrice\n        });\n      }\n      if (order) {\n        order.quantity = order.quantity + 1;\n        state.OrderPrice += Number(order.food_price);\n        order.price = state.OrderPrice;\n      }\n    },\n    orderRemove: (state, action) => {\n      const foodIdToDelete = action.payload;\n      const updatedUserOrder = state.UserOrder.filter(order => order.food_id !== foodIdToDelete);\n      state.UserOrder = updatedUserOrder;\n      state.OrderPrice = state.UserOrder.reduce((total, order) => total + Number(order.food_price), 0);\n    },\n    orderAllRemove: state => {\n      state.UserOrder = [];\n      state.OrderPrice = 0;\n    },\n    quantityAdd: (state, action) => {\n      const foodId = action.payload;\n      const order = state.UserOrder.find(index => index.food_id === foodId);\n      if (order) {\n        order.quantity = order.quantity + 1;\n        state.OrderPrice += Number(order.food_price);\n        order.price = state.OrderPrice;\n      }\n    },\n    quantityLess: (state, action) => {\n      const foodId = action.payload;\n      const order = state.UserOrder.find(index => index.food_id === foodId);\n      if (order) {\n        order.quantity = order.quantity - 1;\n        state.OrderPrice -= Number(order.food_price);\n        order.price = state.OrderPrice;\n      }\n      if ((order === null || order === void 0 ? void 0 : order.quantity) === 0) {\n        const foodIdToDelete = action.payload;\n        const updatedUserOrder = state.UserOrder.filter(order => order.food_id !== foodIdToDelete);\n        state.UserOrder = updatedUserOrder;\n        state.OrderPrice = state.UserOrder.reduce((total, order) => total + Number(order.food_price), 0);\n      }\n    }\n  }\n});\nexport const {\n  orderAdd,\n  orderRemove,\n  quantityAdd,\n  quantityLess,\n  orderAllRemove\n} = orderSlice.actions;\nexport default orderSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","quantity","OrderPrice","UserOrder","orderSlice","name","reducers","orderAdd","state","action","newOrder","payload","order","find","index","food_id","price","food_price","console","log","reduce","total","Number","push","orderRemove","foodIdToDelete","updatedUserOrder","filter","orderAllRemove","quantityAdd","foodId","quantityLess","actions","reducer"],"sources":["/home/and/Рабочий стол/Создать папку/shop-app/frontend/src/store/orderSlice.ts"],"sourcesContent":["import { PayloadAction, createSlice } from '@reduxjs/toolkit'\nimport { Food } from '../type';\n\n\nexport interface Order{\n  quantity: number\n  food_id: number;\n  food_name: string;\n  food_price: number;\n  food_img: string;\n  price: number\n}\n\nexport interface CounterState {\n  quantity: number\n  OrderPrice: number\n  UserOrder: Order[]\n}\n\nconst initialState: CounterState = {\n  quantity:0,\n  OrderPrice: 0,\n  UserOrder: []\n}\n\n\n\nexport const orderSlice = createSlice({\n  name: 'order',\n  initialState,\n  reducers: {\n   \n\n          orderAdd:(state, action: PayloadAction<Food>) => {\n\n          const newOrder = { ...action.payload};\n          const order = state.UserOrder.find((index) => index.food_id === newOrder.food_id);\n           const price = order?.food_price\n           console.log\n            if(!order){  \n              state.OrderPrice = state.UserOrder.reduce((total,order) => total + Number(order.food_price), 0)\n              state.UserOrder.push({...newOrder , quantity:1 , price:state.OrderPrice})\n          }\n\n          if(order){\n\n                    order.quantity = order.quantity + 1\n                      state.OrderPrice += Number(order.food_price);\n                      order.price = state.OrderPrice\n           }\n\n          \n          },\n\n          orderRemove:(state, action: PayloadAction<number>) => {\n\n            const foodIdToDelete = action.payload;\n            const updatedUserOrder = state.UserOrder.filter(order => order.food_id !== foodIdToDelete);\n            state.UserOrder = updatedUserOrder\n            state.OrderPrice = state.UserOrder.reduce((total,order) => total + Number(order.food_price), 0)\n\n          \n            },\n\n\n\n          orderAllRemove:(state) => {\n\n           state.UserOrder = []\n           state.OrderPrice = 0\n          \n            },\n\n            quantityAdd:(state, action: PayloadAction<number>) => {\n              \n              const foodId = action.payload;\n           \n         const order = state.UserOrder.find((index) => index.food_id === foodId);\n                 \n                   if(order){\n                      order.quantity = order.quantity + 1\n                      state.OrderPrice += Number(order.food_price);\n                      order.price = state.OrderPrice\n                   }\n        \n          \n\n              },\n\n              quantityLess:(state, action: PayloadAction<number>) => {\n                \n                const foodId = action.payload;\n                const order = state.UserOrder.find((index) => index.food_id === foodId);\n                 \n                          if(order){\n                    order.quantity = order.quantity - 1\n                    state.OrderPrice -= Number(order.food_price);\n                    order.price = state.OrderPrice\n                        }\n\n                        if(order?.quantity === 0){\n                          const foodIdToDelete = action.payload;\n                          const updatedUserOrder = state.UserOrder.filter(order => order.food_id !== foodIdToDelete);\n                          state.UserOrder = updatedUserOrder\n                          state.OrderPrice = state.UserOrder.reduce((total,order) => total + Number(order.food_price), 0)\n                        }\n\n              \n                },\n\n  },\n})\n\n\nexport const {orderAdd ,orderRemove, quantityAdd,  quantityLess,  orderAllRemove } = orderSlice.actions\n\nexport default orderSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}