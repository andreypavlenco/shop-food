{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMutation } from \"react-query\";\nimport { userService } from \"../services\";\nexport const useFindUser = () => {\n  _s();\n  const {\n    mutateAsync: findOneUser\n  } = useMutation('user', email => userService.findUser(emeil), {\n    onSuccess: () => {},\n    onError: error => {\n      alert(error);\n    }\n  });\n  return {\n    findOneUser\n  };\n};\n_s(useFindUser, \"9Gf43/cvj83ggUaKzFE+LnLIwdo=\", false, function () {\n  return [useMutation];\n});","map":{"version":3,"names":["useMutation","userService","useFindUser","_s","mutateAsync","findOneUser","email","findUser","emeil","onSuccess","onError","error","alert"],"sources":["/home/and/Рабочий стол/Создать папку 6/frontend/src/hooks/useFindUser.ts"],"sourcesContent":["import { useMutation } from \"react-query\"\n\nimport { userService } from \"../services\"\nimport { userType } from \"../types\"\n\nexport const useFindUser = () => {\n    const { mutateAsync: findOneUser } = useMutation(\n      'user',\n      (email: string) => userService.findUser(emeil),\n      {\n        onSuccess: () => {},\n  \n        onError: (error: any) => {\n          alert(error)\n        },\n      },\n    )\n    return { findOneUser }\n  }"],"mappings":";AAAA,SAASA,WAAW,QAAQ,aAAa;AAEzC,SAASC,WAAW,QAAQ,aAAa;AAGzC,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM;IAAEC,WAAW,EAAEC;EAAY,CAAC,GAAGL,WAAW,CAC9C,MAAM,EACLM,KAAa,IAAKL,WAAW,CAACM,QAAQ,CAACC,KAAK,CAAC,EAC9C;IACEC,SAAS,EAAEA,CAAA,KAAM,CAAC,CAAC;IAEnBC,OAAO,EAAGC,KAAU,IAAK;MACvBC,KAAK,CAACD,KAAK,CAAC;IACd;EACF,CACF,CAAC;EACD,OAAO;IAAEN;EAAY,CAAC;AACxB,CAAC;AAAAF,EAAA,CAbUD,WAAW;EAAA,QACiBF,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}